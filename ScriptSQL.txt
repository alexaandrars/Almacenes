USE ProyectoAlmacenesDW
GO

-- Generado para SQL Server Management Studio
--   en:        2024-12-06 13:29:21 CET
--   sitio:      SQL Server

-- Crear las tablas

CREATE TABLE tipoalergia (
    tipoalergiaid INT IDENTITY(1,1) NOT NULL, -- Modificado a IDENTITY
    tipoalergia   VARCHAR(255) NOT NULL,
    CONSTRAINT tipoalergia_pk PRIMARY KEY (tipoalergiaid) -- Definir clave primaria aquí
);


CREATE TABLE alergia (
    id_alergia                INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    nombrealergia             VARCHAR(255),
    tipoalergia_tipoalergiaid INT NOT NULL
);

CREATE TABLE dbo.ano (
    id_tiempo INT IDENTITY(1,1) PRIMARY KEY,  -- id autoincremental como clave primaria
    ano SMALLINT NOT NULL               -- año como atributo
);

CREATE TABLE apacheaps (
    apacheapsid            INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    intubado               INT NOT NULL,
    ventilado              INT NOT NULL,
    frecuenciarespiratoria FLOAT NOT NULL,
    fio2                   FLOAT NOT NULL,
    pao2                   FLOAT NOT NULL,
    pco2                   FLOAT NOT NULL,
    ph                     FLOAT NOT NULL
);

CREATE TABLE categoriahospital (
    categoriaid INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    tamano      VARCHAR(200)
);

CREATE TABLE cuidadoresp (
    cuidadoid           INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    iniciousoventilador INT,
    finusoventilador    INT,
    tipoviaaerea        VARCHAR(30),
    tamanoviaaerea      VARCHAR(10),
    posicionviaaerea    VARCHAR(32)
);

CREATE TABLE diagadmision (
    diagadid          INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    nombrediagnostico VARCHAR(255),
    offsetentradadx   INT
);

CREATE TABLE diagnostico (
    diagnosticoid          INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    descripciondiagnostico VARCHAR(200) NOT NULL,
    codigoicd9             VARCHAR(100) NOT NULL,
    prioridaddiagnostico   VARCHAR(10) NOT NULL
);

CREATE TABLE hospital (
    hospitalid                    INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    categoriahospital_categoriaid INT NOT NULL,
    region_regionid               INT NOT NULL
);

CREATE TABLE ingresos_uci (
    cantidad_de_ingresos         INT,
    uso_de_ventilacion_mecanica  CHAR(1),
    puntaje_de_severidad         VARCHAR(4000),
    tasa_de_ventilacion_mecanica INT,
    TotalDiagnosticosUnicos      INT NOT NULL,
    RankingIngresoHospital       INT NULL,
	TotalPacientesUnicos         INT NULL,
	TotalIngresoHospital         INT NULL,
    TipoDeIngreso                NVARCHAR(50) NULL,
    paciente_pacienteid          INT NOT NULL,
    hospital_hospitalid          INT NOT NULL,
    tiempo_tiempoid              INT NOT NULL,
    diagadmision_diagadid        INT NOT NULL,
    cuidadoresp_cuidadoid        INT NOT NULL,
    apacheaps_apacheapsid        INT NOT NULL,
    diagnosticoid                INT NOT NULL,
    ingresos_uci_id              INT IDENTITY(1,1) NOT NULL -- IDENTITY actúa como clave primaria
);

CREATE TABLE medicacion (
    medicamentoid     INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    nombremedicamento VARCHAR(255) NOT NULL,
    dosis             VARCHAR(400) NOT NULL,
    frecuencia        VARCHAR(255) NOT NULL
);

CREATE TABLE paciente (
    pacienteid        INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    pacienteingresoid INT NOT NULL,
    genero            VARCHAR(25) NOT NULL,
    etnicidad         VARCHAR(50) NOT NULL,
    edad              VARCHAR(10) NOT NULL,
    pesoingreso       DECIMAL(10, 2) NOT NULL
);

CREATE TABLE patologia (
    patologiaid     INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    nombrepatologia VARCHAR(255)
);

CREATE TABLE region (
    regionid INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    region   VARCHAR(64) NOT NULL
);

CREATE TABLE relation_10 (
    medicacion_medicamentoid     INT NOT NULL,
    ingresos_uci_ingresos_uci_id INT NOT NULL
);

CREATE TABLE relation_13 (
    ingresos_uci_ingresos_uci_id INT NOT NULL,
    alergia_id_alergia           INT NOT NULL
);

CREATE TABLE relation_20 (
    ingresos_uci_ingresos_uci_id INT NOT NULL,
    diagnostico_diagnosticoid    INT NOT NULL
);

CREATE TABLE relation_9 (
    patologia_patologiaid        INT NOT NULL,
    ingresos_uci_ingresos_uci_id INT NOT NULL
);

CREATE TABLE tipoalergia (
    tipoalergiaid INT IDENTITY(1,1) NOT NULL, -- IDENTITY actúa como clave primaria
    tipoalergia   VARCHAR(255) NOT NULL
);

-- Definición de claves foráneas
ALTER TABLE alergia
    ADD CONSTRAINT alergia_tipoalergia_fk FOREIGN KEY (tipoalergia_tipoalergiaid)
        REFERENCES tipoalergia (tipoalergiaid);

ALTER TABLE hospital
    ADD CONSTRAINT hospital_categoriahospital_fk FOREIGN KEY (categoriahospital_categoriaid)
        REFERENCES categoriahospital (categoriaid);

ALTER TABLE hospital
    ADD CONSTRAINT hospital_region_fk FOREIGN KEY (region_regionid)
        REFERENCES region (regionid);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_ano_fk FOREIGN KEY (ano_ano)
        REFERENCES ano (ano);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_apacheaps_fk FOREIGN KEY (apacheaps_apacheapsid)
        REFERENCES apacheaps (apacheapsid);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_cuidadoresp_fk FOREIGN KEY (cuidadoresp_cuidadoid)
        REFERENCES cuidadoresp (cuidadoid);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_diagadmision_fk FOREIGN KEY (diagadmision_diagadid)
        REFERENCES diagadmision (diagadid);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_hospital_fk FOREIGN KEY (hospital_hospitalid)
        REFERENCES hospital (hospitalid);

ALTER TABLE ingresos_uci
    ADD CONSTRAINT ingresos_uci_paciente_fk FOREIGN KEY (paciente_pacienteid)
        REFERENCES paciente (pacienteid);

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_ingresos_uci_fk FOREIGN KEY (ingresos_uci_ingresos_uci_id)
        REFERENCES ingresos_uci (ingresos_uci_id);

ALTER TABLE relation_10
    ADD CONSTRAINT relation_10_medicacion_fk FOREIGN KEY (medicacion_medicamentoid)
        REFERENCES medicacion (medicamentoid);

ALTER TABLE relation_13
    ADD CONSTRAINT relation_13_alergia_fk FOREIGN KEY (alergia_id_alergia)
        REFERENCES alergia (id_alergia);

ALTER TABLE relation_13
    ADD CONSTRAINT relation_13_ingresos_uci_fk FOREIGN KEY (ingresos_uci_ingresos_uci_id)
        REFERENCES ingresos_uci (ingresos_uci_id);

ALTER TABLE relation_20
    ADD CONSTRAINT relation_20_diagnostico_fk FOREIGN KEY (diagnostico_diagnosticoid)
        REFERENCES diagnostico (diagnosticoid);

ALTER TABLE relation_20
    ADD CONSTRAINT relation_20_ingresos_uci_fk FOREIGN KEY (ingresos_uci_ingresos_uci_id)
        REFERENCES ingresos_uci (ingresos_uci_id);

ALTER TABLE relation_9
    ADD CONSTRAINT relation_9_ingresos_uci_fk FOREIGN KEY (ingresos_uci_ingresos_uci_id)
        REFERENCES ingresos_uci (ingresos_uci_id);

ALTER TABLE relation_9
    ADD CONSTRAINT relation_9_patologia_fk FOREIGN KEY (patologia_patologiaid)
        REFERENCES patologia (patologiaid);

-- Fin del script
